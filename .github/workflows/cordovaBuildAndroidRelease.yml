name: main - Build Android debug app

on:
  push:
    # branches:
    #   - 'main'
    #   - 'develop'
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching *, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Cordova
        run: npm install -g cordova

      - name: Install app dependencies
        run: npm install

      - name: Fixing Android Build Tool Issue
        run: |
            cd $ANDROID_HOME/build-tools/33.0.0
            mv d8 dx
            cd lib
            mv d8.jar dx.jar

      - name: Add Android platform
        run : |
          cordova platform add android

      - name: write temp file for version/ build number
        run: |
          rm ${{ github.workspace }}/hooks/buildnumber.txt
          touch ${{ github.workspace }}/hooks/buildnumber.txt
          printf -v BUILDNUMBER "%04d" ${{github.run_number}}
          echo $BUILDNUMBER >> ${{ github.workspace }}/hooks/buildnumber.txt
          echo "cat ../buildnumber.txt"
          cat ${{ github.workspace }}/hooks/buildnumber.txt
          VERSIONNUMBER=`cat ${{ github.workspace }}/hooks/versionnumber.txt`
          echo "cat ../buildnumber.txt"
          cat ${{ github.workspace }}/hooks/buildnumber.txt
          echo "CURRENT_VERSIONNUMBER=$VERSIONNUMBER" >> $GITHUB_ENV
          echo "CURRENT_BUILDNUMBER=$BUILDNUMBER" >> $GITHUB_ENV

      - name: Build Android Dev APK
        run: |
          cordova build android
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            changes are documented in the issue section
            in future it will generated based on closed issues
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: platforms/android/app/build/outputs/apk/debug/app-debug.apk
          asset_name: 3DprinterStatus_${{ env.CURRENT_VERSIONNUMBER }}.${{ env.CURRENT_BUILDNUMBER }}.apk
          asset_content_type: application/zip